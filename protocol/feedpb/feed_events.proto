syntax = "proto3";

package feedpb;

import "google/protobuf/timestamp.proto";

option go_package = ".;feedpb";

service FeedEvents {
  rpc EventsSubscribe(EventsSubscribeRequest) returns (stream FeedItem);
}

message EventsSubscribeRequest {
  // subscriber_id represent inbox global identifier
  string subscriber_id = 1;
  // subscription_types describe on which types client would like to subscribe
  repeated FeedItemType subscription_types = 2;
  // если его нет, то берем сейчас?
  optional google.protobuf.Timestamp last_updated_at = 3;
}


enum FeedItemType {
  FEED_ITEM_TYPE_UNSPECIFIED = 0;
  FEED_ITEM_TYPE_DAO = 1;
  FEED_ITEM_TYPE_PROPOSAL = 2;
  FEED_ITEM_TYPE_DELEGATE = 3;
}

message Timeline {
  string action = 1;
  google.protobuf.Timestamp created_at = 2;
}

message DAO {
  google.protobuf.Timestamp created_at = 1;
  string internal_id = 3;
  string original_id = 4;
  string name = 5;
  string avatar = 6;
  double popularity_index = 7;
  bool verified = 8;
  repeated Timeline timeline = 9;
}

message Proposal {
  google.protobuf.Timestamp created_at = 1;
  string id = 3;
  string dao_internal_id = 4;
  string author = 5;
  string title = 6;
  string state = 7;
  bool spam = 8;
  repeated Timeline timeline = 9;
  string type = 10;
  string privacy = 11;
  repeated string choices = 12;
  google.protobuf.Timestamp vote_start = 13;
  google.protobuf.Timestamp vote_end = 14;
}

message Delegate {
  string address_from = 1;
  string address_to = 2;
  string dao_internal_id = 3;
  string proposal_id = 4;
}

message FeedItem {
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.Timestamp updated_at = 2;
  FeedItemType type = 3;

  oneof snapshot {
    DAO dao = 10;
    Proposal proposal = 11;
    Delegate delegate = 12;
  }
}
